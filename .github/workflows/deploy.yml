name: CICD

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger

jobs:
  build-and-deploy:
    runs-on: [ubuntu-latest]
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm install

      - name: Generate Deployment Package
        run: zip -r nodejs-app-build.zip .

      - name: Create EB Application
        run: |
          echo "Creating Elastic Beanstalk application..."
          aws elasticbeanstalk create-application --application-name nodejs-app --description "Node.js Application" || echo "Application already exists."
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Check if EB Environment Exists
        id: check_env
        run: |
          echo "Checking if the environment 'nodejs-app-env' exists for application 'nodejs-app'..."
          ENV_NAME=$(aws elasticbeanstalk describe-environments --application-name nodejs-app --environment-names nodejs-app-env --query "Environments[*].EnvironmentName" --output text)
          if [ -n "$ENV_NAME" ]; then
            echo "Environment '$ENV_NAME' already exists."
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "Environment does not exist."
            echo "exists=false" >> $GITHUB_ENV
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Create EB Environment
        if: env.exists == 'false'
        run: |
          echo "Creating environment 'nodejs-app-env' for application 'nodejs-app'..."
          aws elasticbeanstalk create-environment --application-name nodejs-app --environment-name nodejs-app-env --solution-stack-name "64bit Amazon Linux 2 v3.5.3 running Node.js 20" # Update this name if needed
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy to EB
        run: |
          echo "Deploying to Elastic Beanstalk environment 'nodejs-app-env'..."
          aws elasticbeanstalk update-environment --environment-name nodejs-app-env --version-label ${{ github.sha }} || echo "Failed to update environment."
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
